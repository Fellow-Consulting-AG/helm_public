{{- if .Values.ingress }}
{{- $fullName := include "base.fullname" $ }}
{{- $ingresses := list }}
{{- if kindIs "slice" .Values.ingress }}
  {{- $ingresses = .Values.ingress }}
{{- else if kindIs "map" .Values.ingress }}
  {{- if and (hasKey .Values.ingress "enabled") (not .Values.ingress.enabled) }}
    {{- /* Ingress is explicitly disabled, don't create any resources */ -}}
  {{- else if hasKey .Values.ingress "hosts" }}
    {{- /* Single ingress object with hosts */ -}}
    {{- $ingresses = list .Values.ingress }}
  {{- end }}
{{- else if kindIs "bool" .Values.ingress }}
  {{- /* Ingress is just a boolean, don't create resources */ -}}
{{- end }}
{{- range $ingress := $ingresses }}
  {{- if or (not (hasKey $ingress "enabled")) $ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}{{ $ingress.nameSuffix | default "" }}
  annotations:
    {{- if $ingress.annotations }}
    {{- toYaml $ingress.annotations | nindent 4 }}
    {{- end }}
spec:
  {{- if $ingress.class }}
  ingressClassName: {{ $ingress.class }}
  {{- end }}
  rules:
  {{- range $ingress.hosts }}
  - host: {{ .host }}
    http:
      paths:
      {{- range .paths }}
      - path: {{ .path }}
        pathType: {{ .pathType | default "Prefix" }}
        backend:
          service:
            name: {{ .backend.service.name }}
            port:
              number: {{ .backend.service.port }}
      {{- end }}
  {{- end }}
  {{- if $ingress.tls }}
  tls:
  {{- range $ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}