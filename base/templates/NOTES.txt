1. Get the application URL by running these commands:
{{- $hasIngress := false -}}
{{- $ingressEnabled := false -}}
{{- if .Values.ingress -}}
  {{- if kindIs "slice" .Values.ingress -}}
    {{- if gt (len .Values.ingress) 0 -}}
      {{- $firstIngress := index .Values.ingress 0 -}}
      {{- if and (kindIs "map" $firstIngress) (hasKey $firstIngress "enabled") -}}
        {{- $ingressEnabled = $firstIngress.enabled -}}
      {{- else -}}
        {{- $ingressEnabled = true -}}
      {{- end -}}
      {{- if $ingressEnabled -}}
        {{- range $ingress := .Values.ingress }}
          {{- if $ingress.hosts }}
            {{- range $ingress.hosts }}
              {{- range .paths }}
  http{{ if $ingress.tls }}s{{ end }}://{{ .host }}{{ .path }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- $hasIngress = true -}}
      {{- end -}}
    {{- end -}}
  {{- else if kindIs "map" .Values.ingress -}}
    {{- if hasKey .Values.ingress "enabled" -}}
      {{- $ingressEnabled = .Values.ingress.enabled -}}
    {{- end -}}
    {{- if $ingressEnabled -}}
      {{- if .Values.ingress.hosts -}}
        {{- range .Values.ingress.hosts }}
          {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ .host }}{{ .path }}
          {{- end }}
        {{- end }}
        {{- $hasIngress = true -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
{{- if not $hasIngress -}}
{{- if .Values.service }}
{{- $service := .Values.service -}}
{{- if kindIs "slice" $service -}}
{{- $service = index $service 0 -}}
{{- end -}}
{{- if contains "NodePort" $service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "base.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" $service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "base.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "base.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ $service.port }}
{{- else if contains "ClusterIP" $service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "base.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- end }}
{{- else }}
kubectl get ingress
{{- end }}
